@model LingvaApp.ViewModels.LanguageViewModel
@{
    Layout = null;

    /* We get all collections to each language level to load if they exist. Otherwise the level won't load at all*/

    List<Theme> a1 = null;
    if (Model.Themes.Where(x => x.ThemeLanguageLevel == "A1").Any())
        a1 = Model.Themes.Where(x => x.ThemeLanguageLevel == "A1").ToList();

    List<Theme> a2 = null;
    if (Model.Themes.Where(x => x.ThemeLanguageLevel == "A2").Any())
        a2 = Model.Themes.Where(x => x.ThemeLanguageLevel == "A2").ToList();

    List<Theme> b1 = null;
    if (Model.Themes.Where(x => x.ThemeLanguageLevel == "B1").Any())
        b1 = Model.Themes.Where(x => x.ThemeLanguageLevel == "B1").ToList();

    List<Theme> b2 = null;
    if (Model.Themes.Where(x => x.ThemeLanguageLevel == "B2").Any())
        b2 = Model.Themes.Where(x => x.ThemeLanguageLevel == "B2").ToList();

    List<Theme> c1 = null;
    if (Model.Themes.Where(x => x.ThemeLanguageLevel == "C1").Any())
        c1 = Model.Themes.Where(x => x.ThemeLanguageLevel == "C1").ToList();

    List<Theme> c2 = null;
    if (Model.Themes.Where(x => x.ThemeLanguageLevel == "C2").Any())
        c2 = Model.Themes.Where(x => x.ThemeLanguageLevel == "C2").ToList();
}

<!DOCTYPE html>

<html lang="ru">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Lingva: Русский</title>
    <link rel="stylesheet" href="../../css/language/lang.css" asp-append-version="true">
    <link rel="stylesheet" href="../../css/base.css" asp-append-version="true">
    @await Html.PartialAsync("_CssHeaderPartial")
    @await Html.PartialAsync("_CssLanguagePartial")
</head>
<body>
    @await Html.PartialAsync("_HeaderPartial")
    <div class="levels">
        @{
            if (a1 != null)
                @await Html.PartialAsync("_LevelPartial", null, new ViewDataDictionary(ViewData) { { "level", "A1" }, { "themes", a1 }, { "MaxIndex", a1.Max(x => x.OrderIndex) } })
            
            if (a2 != null)
                @await Html.PartialAsync("_LevelPartial", null, new ViewDataDictionary(ViewData) { { "level", "A2" }, { "themes", a2 }, { "MaxIndex", a2.Max(x => x.OrderIndex) } })
           
            if (b1 != null)
                @await Html.PartialAsync("_LevelPartial", null, new ViewDataDictionary(ViewData) { { "level", "B1" }, { "themes", b1 }, { "MaxIndex", b1.Max(x => x.OrderIndex) } })
           
            if (b2 != null)
                @await Html.PartialAsync("_LevelPartial", null, new ViewDataDictionary(ViewData) { { "level", "B2" }, { "themes", b2 }, { "MaxIndex", b2.Max(x => x.OrderIndex) } })
           
            if (c1 != null)
                @await Html.PartialAsync("_LevelPartial", null, new ViewDataDictionary(ViewData) { { "level", "C1" }, { "themes", c1 }, { "MaxIndex", c1.Max(x => x.OrderIndex) } })
            
            if (c2 != null)
                @await Html.PartialAsync("_LevelPartial", null, new ViewDataDictionary(ViewData) { { "level", "C2" }, { "themes", c2 }, { "MaxIndex", c2.Max(x => x.OrderIndex) } })
        }
    </div>
</body>
</html>
